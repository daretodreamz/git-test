# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none

variables:
  system.debug: 'true'

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Tests
        displayName: Unit Tests & Static Analysis
        variables:
          # Use the repository _resource_ if defined, else fall back to the integration_test_repo_name variable
          integrationTestRepo: 'Fabrikam'
          integrationTestBranch: 'refs/heads/'
        timeoutInMinutes: 10
        pool:
          name: my-personal-computer
          demands: 
          - agent.name -equals Windows-Agent
        steps:
        # Node install
        - task: UseNode@1
          displayName: Node install
          inputs:
            version: '16.x'
            checkLatest: true
        # Write the installed version to the command line
        - script: node -v
        # Print out system accesstoken
        - powershell: |
            $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=4.1-preview"
            Write-Host "URL: $url"
            $pipeline = Invoke-RestMethod -Uri $url -Headers @{
              Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
            }
            Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
            Write-Host "Print out system accesstoken = $(system.accesstoken)"
          env:
            SYSTEM_ACCESSTOKEN: $(system.accesstoken)
        - script: |
           echo "Current value of this built-in variable is: $(Pipeline.Workspace)"
          displayName: 'Pipeline.Workspace'
        # Clone the application repo, check out commit that triggered the pipeline
        - checkout: self
          path: source
        # Check out integration tests repo
        - bash: |
            rm -rf $CLONE_DIR

            echo "Cloning repository $REPO, branch ${BRANCH}"
            git clone --branch ${BRANCH}  "https://bingwang0140@dev.azure.com/bingwang0140/Fabrikam/_git/$REPO" $CLONE_DIR          
          displayName: "Clone Integration Test Repo"
          env:
            REPO: $(integrationTestRepo)
            BRANCH: $(integrationTestBranch)
            CLONE_DIR: $(Pipeline.Workspace)/integration_tests
            

